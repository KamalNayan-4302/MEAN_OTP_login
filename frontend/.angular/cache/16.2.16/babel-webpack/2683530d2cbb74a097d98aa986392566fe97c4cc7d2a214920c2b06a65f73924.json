{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  getProfile() {\n    const token = localStorage.getItem('token');\n    return this.http.get(`${environment.apiUrl}/user/profile`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  updateProfile(name, email, photo) {\n    const token = localStorage.getItem('token');\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('email', email);\n    if (photo) {\n      formData.append('photo', photo);\n    }\n    return this.http.put(`${environment.apiUrl}/user/profile`, formData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  static {\n    this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","UserService","constructor","http","getProfile","token","localStorage","getItem","get","apiUrl","headers","Authorization","updateProfile","name","email","photo","formData","FormData","append","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\MEAN__OTP\\frontend\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  getProfile(): Observable<any> {\n    const token = localStorage.getItem('token');\n    return this.http.get(`${environment.apiUrl}/user/profile`, {\n      headers: { Authorization: `Bearer ${token}` }\n    });\n  }\n\n  updateProfile(name: string, email: string, photo?: File): Observable<any> {\n    const token = localStorage.getItem('token');\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('email', email);\n    if (photo) {\n      formData.append('photo', photo);\n    }\n    return this.http.put(`${environment.apiUrl}/user/profile`, formData, {\n      headers: { Authorization: `Bearer ${token}` }\n    });\n  }\n}\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,gCAAgC;;;AAK5D,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,UAAUA,CAAA;IACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,GAAGR,WAAW,CAACS,MAAM,eAAe,EAAE;MACzDC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUN,KAAK;MAAE;KAC5C,CAAC;EACJ;EAEAO,aAAaA,CAACC,IAAY,EAAEC,KAAa,EAAEC,KAAY;IACrD,MAAMV,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMS,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAC;IAC7BG,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,KAAK,CAAC;IAC/B,IAAIC,KAAK,EAAE;MACTC,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,KAAK,CAAC;;IAEjC,OAAO,IAAI,CAACZ,IAAI,CAACgB,GAAG,CAAC,GAAGnB,WAAW,CAACS,MAAM,eAAe,EAAEO,QAAQ,EAAE;MACnEN,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUN,KAAK;MAAE;KAC5C,CAAC;EACJ;;;uBArBWJ,WAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXtB,WAAW;MAAAuB,OAAA,EAAXvB,WAAW,CAAAwB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}