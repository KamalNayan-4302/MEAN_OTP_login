{"ast":null,"code":"import { BehaviorSubject, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser') || '{}'));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n  get currentUserValue() {\n    return this.currentUserSubject.value;\n  }\n  login(payload) {\n    return this.http.post(`${environment.apiUrl}/auth/login`, payload, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).pipe(map(response => {\n      if (response.success && response.token) {\n        localStorage.setItem('currentUser', JSON.stringify(response.user));\n        this.currentUserSubject.next(response.user);\n      }\n      return response;\n    }), catchError(error => {\n      return throwError(error);\n    }));\n  }\n  loginWithMobile(mobile, password) {\n    return this.http.post(`${environment.apiUrl}/auth/login`, {\n      mobile,\n      password\n    }).pipe(map(response => {\n      if (response.success && response.token) {\n        localStorage.setItem('currentUser', JSON.stringify(response.user));\n        this.currentUserSubject.next(response.user);\n      }\n      return response;\n    }), catchError(error => {\n      return throwError(error);\n    }));\n  }\n  loginOtp(email) {\n    return this.http.post(`${environment.apiUrl}/auth/login-otp`, {\n      email\n    }).pipe(map(response => response), catchError(error => throwError(error)));\n  }\n  loginOtpMobile(mobile) {\n    return this.http.post(`${environment.apiUrl}/auth/login-otp`, {\n      mobile\n    }).pipe(map(response => response), catchError(error => throwError(error)));\n  }\n  // Combined OTP verification for login\n  verifyEmailOtp(email, otp) {\n    return this.http.post(`${environment.apiUrl}/auth/verify-otp`, {\n      email,\n      otp\n    }).pipe(map(response => response), catchError(error => throwError(error)));\n  }\n  verifyMobileOtp(mobile, otp) {\n    return this.http.post(`${environment.apiUrl}/auth/verify-otp`, {\n      mobile,\n      otp\n    }).pipe(map(response => response), catchError(error => throwError(error)));\n  }\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next({});\n  }\n  get userProfilePhoto() {\n    return this.currentUserValue && this.currentUserValue.profilePhoto ? this.currentUserValue.profilePhoto : null;\n  }\n  isLoggedIn() {\n    const token = localStorage.getItem('currentUser');\n    return !!token;\n  }\n  register(formData) {\n    return this.http.post(`${environment.apiUrl}/user/register`, formData, {\n      reportProgress: true,\n      observe: 'events'\n    }).pipe(map(response => response), catchError(error => throwError(error)));\n  }\n  completeRegistration(mobile, otp) {\n    return this.http.post(`${environment.apiUrl}/auth/complete-registration`, {\n      mobile,\n      otp\n    }).pipe(map(response => {\n      if (response.success) {\n        localStorage.setItem('currentUser', JSON.stringify(response.user));\n        this.currentUserSubject.next(response.user);\n        return response;\n      }\n      return throwError(new Error(response.message || 'Registration completion failed'));\n    }), catchError(error => {\n      console.error('Registration completion error:', error);\n      return throwError(error.error?.message || 'An error occurred during registration completion');\n    }));\n  }\n  resendEmailOtp(email) {\n    return this.http.post(`${environment.apiUrl}/auth/login-otp`, {\n      email\n    }).pipe(map(response => response), catchError(error => throwError(error)));\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","throwError","map","catchError","environment","AuthService","constructor","http","currentUserSubject","JSON","parse","localStorage","getItem","currentUser","asObservable","currentUserValue","value","login","payload","post","apiUrl","headers","pipe","response","success","token","setItem","stringify","user","next","error","loginWithMobile","mobile","password","loginOtp","email","loginOtpMobile","verifyEmailOtp","otp","verifyMobileOtp","logout","removeItem","userProfilePhoto","profilePhoto","isLoggedIn","register","formData","reportProgress","observe","completeRegistration","Error","message","console","resendEmailOtp","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\MEAN__OTP\\frontend\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private currentUserSubject: BehaviorSubject<any>;\n  public currentUser: Observable<any>;\n\n  constructor(\n    private http: HttpClient\n  ) {\n    this.currentUserSubject = new BehaviorSubject<any>(JSON.parse(localStorage.getItem('currentUser') || '{}'));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): any {\n    return this.currentUserSubject.value;\n  }\n\n  login(payload: any) {\n    return this.http.post<any>(`${environment.apiUrl}/auth/login`, payload, {\n      headers: { 'Content-Type': 'application/json' }\n    })\n      .pipe(\n        map(response => {\n          if (response.success && response.token) {\n            localStorage.setItem('currentUser', JSON.stringify(response.user));\n            this.currentUserSubject.next(response.user);\n          }\n          return response;\n        }),\n        catchError((error: any) => {\n          return throwError(error);\n        })\n      );\n  }\n\n  loginWithMobile(mobile: string, password: string) {\n    return this.http.post<any>(`${environment.apiUrl}/auth/login`, { mobile, password })\n      .pipe(\n        map(response => {\n          if (response.success && response.token) {\n            localStorage.setItem('currentUser', JSON.stringify(response.user));\n            this.currentUserSubject.next(response.user);\n          }\n          return response;\n        }),\n        catchError((error: any) => {\n          return throwError(error);\n        })\n      );\n  }\n\n  loginOtp(email: string) {\n    return this.http.post<any>(`${environment.apiUrl}/auth/login-otp`, { email })\n      .pipe(\n        map(response => response),\n        catchError((error: any) => throwError(error))\n      );\n  }\n\n  loginOtpMobile(mobile: string) {\n    return this.http.post<any>(`${environment.apiUrl}/auth/login-otp`, { mobile })\n      .pipe(\n        map(response => response),\n        catchError((error: any) => throwError(error))\n      );\n  }\n\n  // Combined OTP verification for login\n  verifyEmailOtp(email: string, otp: string) {\n    return this.http.post<any>(`${environment.apiUrl}/auth/verify-otp`, { email, otp })\n      .pipe(\n        map(response => response),\n        catchError((error: any) => throwError(error))\n      );\n  }\n\n  verifyMobileOtp(mobile: string, otp: string) {\n    return this.http.post<any>(`${environment.apiUrl}/auth/verify-otp`, { mobile, otp })\n      .pipe(\n        map(response => response),\n        catchError((error: any) => throwError(error))\n      );\n  }\n\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next({});\n  }\n\n  get userProfilePhoto(): string | null {\n    return this.currentUserValue && this.currentUserValue.profilePhoto ? this.currentUserValue.profilePhoto : null;\n  }\n\n  isLoggedIn(): boolean {\n    const token = localStorage.getItem('currentUser');\n    return !!token;\n  }\n\n  register(formData: FormData) {\n    return this.http.post<any>(`${environment.apiUrl}/user/register`, formData, {\n      reportProgress: true,\n      observe: 'events'\n    })\n      .pipe(\n        map(response => response),\n        catchError((error: any) => throwError(error))\n      );\n  }\n\n  completeRegistration(mobile: string, otp: string) {\n    return this.http.post<any>(`${environment.apiUrl}/auth/complete-registration`, { mobile, otp })\n      .pipe(\n        map(response => {\n          if (response.success) {\n            localStorage.setItem('currentUser', JSON.stringify(response.user));\n            this.currentUserSubject.next(response.user);\n            return response;\n          }\n          return throwError(new Error(response.message || 'Registration completion failed'));\n        }),\n        catchError(error => {\n          console.error('Registration completion error:', error);\n          return throwError(error.error?.message || 'An error occurred during registration completion');\n        })\n      );\n  }\n\n\n\n  resendEmailOtp(email: string) {\n    return this.http.post<any>(`${environment.apiUrl}/auth/login-otp`, { email })\n      .pipe(\n        map(response => response),\n        catchError((error: any) => throwError(error))\n      );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}